<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dihaiboyun.cms.dao.ILinkRelationDAO">
	
	<cache flushInterval="600000" eviction="LRU" type="org.mybatis.caches.oscache.OSCache"/>
	
	<sql id="linkRelationLikeWhere">
		<where>
            <if test ="id != null and id > -1">
				and `ID` = #{id}
			</if>
            <if test ="pageId != null and pageId > -1">
				and `PAGE_ID` = #{pageId}
			</if>
            <if test ="siteId != null and siteId > -1">
				and `SITE_ID` = #{siteId}
			</if>
            <if test ="ordernum != null and ordernum > -1">
				and `ORDERNUM` = #{ordernum}
			</if>
	        <if test ="createuser != null and createuser != ''">
			    and `CREATEUSER` like '%${createuser}%'
		    </if>
		</where>
	</sql>
	
	<sql id="linkRelationPage">
		<if test="null != start">
		  limit #{start},#{pageSize}
		</if>
	</sql>
	
	<sql id="linkRelationField">
		`ID`, `PAGE_ID`, `SITE_ID`, `ORDERNUM`, `CREATEUSER`, `CREATETIME`
	</sql>
	
	<resultMap id="linkRelationMap" type="linkRelation">
	    	<result property="id" column="ID" javaType="java.lang.Integer" jdbcType="INTEGER" />
	    	<result property="pageId" column="PAGE_ID" javaType="java.lang.Integer" jdbcType="INTEGER" />
	    	<result property="siteId" column="SITE_ID" javaType="java.lang.Integer" jdbcType="INTEGER" />
	    	<result property="ordernum" column="ORDERNUM" javaType="java.lang.Integer" jdbcType="INTEGER" />
	    	<result property="createuser" column="CREATEUSER" javaType="java.lang.String" jdbcType="VARCHAR" />
	    	<result property="createtime" column="CREATETIME" javaType="java.util.Date" jdbcType="TIMESTAMP" />
	</resultMap>
	
	<insert id="addSaveLinkRelation" parameterType="linkRelation">
		insert into `link_relation` (
           `PAGE_ID`, 
           `SITE_ID`, 
           `ORDERNUM`, 
           `CREATEUSER`, 
           `CREATETIME`
		) values 
		(
            #{pageId}, 
            #{siteId}, 
            #{ordernum}, 
            #{createuser}, 
            #{createtime}
		)
		<selectKey keyProperty="id"  resultType="java.lang.Integer">
			select last_insert_id() as id from `link_relation` limit 1
		</selectKey>
	</insert>
	
	<delete id="deleteByIds" parameterType="String">
		delete from `link_relation` ${_parameter}
	</delete>
	
	<update id="editSaveLinkRelation" parameterType="linkRelation">
		update `link_relation` set 
              `PAGE_ID` = #{pageId}, 
              `SITE_ID` = #{siteId}, 
              `ORDERNUM` = #{ordernum}, 
              `CREATEUSER` = #{createuser}, 
              `CREATETIME` = #{createtime}
        	where ID = #{id}
	</update>
	
	<select id="selectLinkRelationById" parameterType="linkRelation" resultMap="linkRelationMap"  >
		SELECT * FROM `link_relation` where ID = #{id}
	</select>
	
	<select id="getLinkRelationCount" parameterType="linkRelation" resultType="Long" >
		select count(*) from `link_relation`
		<include refid="linkRelationLikeWhere" />
	</select>
	
	<select id="selectAll" parameterType="linkRelation" resultMap="linkRelationMap" >
		select * from `link_relation`
	</select>
	
	<select id="selectLinkRelationLike" parameterType="linkRelation" resultMap="linkRelationMap" >
		SELECT <include refid="linkRelationField" /> FROM `link_relation`
	        <include refid="linkRelationLikeWhere" />
			order by ID desc
	        <include refid="linkRelationPage" /> 
	</select>
	
	<select id="selectLinkRelationByPageId" parameterType="linkRelation" resultMap="linkRelationMap" >
		SELECT <include refid="linkRelationField" /> FROM `link_relation`
	        where `PAGE_ID` = #{pageId}
			order by ORDERNUM 
	</select>
	
	<delete id="deleteByPageId" parameterType="linkRelation">
		delete from `link_relation` 
		where `PAGE_ID` = #{pageId}
	</delete>
</mapper>